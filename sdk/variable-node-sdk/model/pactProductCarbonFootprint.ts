/**
 * Variable API
 * This is the Variable API
 *
 * The version of the OpenAPI document: 1.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { PactDataQualityIndicators } from './pactDataQualityIndicators';
import { ProductOrSectorSpecificRuleInner } from './productOrSectorSpecificRuleInner';
import { SecondaryEmissionFactorSourcesInner } from './secondaryEmissionFactorSourcesInner';

export class PactProductCarbonFootprint {
    'declaredUnit'?: string;
    'unitaryProductAmount'?: string;
    'pCfExcludingBiogenic'?: string;
    'pCfIncludingBiogenic'?: string;
    'fossilGhgEmissions'?: string;
    'fossilCarbonContent'?: string;
    'biogenicCarbonContent'?: string;
    'dLucGhgEmissions'?: string;
    'landManagementGhgEmissions'?: string;
    'otherBiogenicGhgEmissions'?: string;
    'iLucGhgEmissions'?: string;
    'biogenicCarbonWithdrawal'?: string;
    'aircraftGhgEmissions'?: string;
    'characterizationFactors'?: string;
    'ipccCharacterizationFactorsSources'?: Array<string>;
    'crossSectoralStandardsUsed'?: Array<string>;
    'productOrSectorSpecificRules'?: Array<ProductOrSectorSpecificRuleInner>;
    'biogenicAccountingMethodology'?: string;
    'boundaryProcessesDescription'?: string;
    'referencePeriodStart'?: Date;
    'referencePeriodEnd'?: Date;
    'geographyCountrySubdivision'?: string;
    'geographyCountry'?: string;
    'geographyRegionOrSubregion'?: string;
    'secondaryEmissionFactorSources'?: Array<SecondaryEmissionFactorSourcesInner>;
    'exemptedEmissionsPercent'?: number;
    'exemptedEmissionsDescription'?: string;
    'packagingEmissionsIncluded'?: boolean;
    'packagingGhgEmissions'?: string;
    'allocationRulesDescription'?: string;
    'uncertaintyAssessmentDescription'?: string;
    'primaryDataShare'?: number;
    'dqi'?: PactDataQualityIndicators;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "declaredUnit",
            "baseName": "declaredUnit",
            "type": "string"
        },
        {
            "name": "unitaryProductAmount",
            "baseName": "unitaryProductAmount",
            "type": "string"
        },
        {
            "name": "pCfExcludingBiogenic",
            "baseName": "pCfExcludingBiogenic",
            "type": "string"
        },
        {
            "name": "pCfIncludingBiogenic",
            "baseName": "pCfIncludingBiogenic",
            "type": "string"
        },
        {
            "name": "fossilGhgEmissions",
            "baseName": "fossilGhgEmissions",
            "type": "string"
        },
        {
            "name": "fossilCarbonContent",
            "baseName": "fossilCarbonContent",
            "type": "string"
        },
        {
            "name": "biogenicCarbonContent",
            "baseName": "biogenicCarbonContent",
            "type": "string"
        },
        {
            "name": "dLucGhgEmissions",
            "baseName": "dLucGhgEmissions",
            "type": "string"
        },
        {
            "name": "landManagementGhgEmissions",
            "baseName": "landManagementGhgEmissions",
            "type": "string"
        },
        {
            "name": "otherBiogenicGhgEmissions",
            "baseName": "otherBiogenicGhgEmissions",
            "type": "string"
        },
        {
            "name": "iLucGhgEmissions",
            "baseName": "iLucGhgEmissions",
            "type": "string"
        },
        {
            "name": "biogenicCarbonWithdrawal",
            "baseName": "biogenicCarbonWithdrawal",
            "type": "string"
        },
        {
            "name": "aircraftGhgEmissions",
            "baseName": "aircraftGhgEmissions",
            "type": "string"
        },
        {
            "name": "characterizationFactors",
            "baseName": "characterizationFactors",
            "type": "string"
        },
        {
            "name": "ipccCharacterizationFactorsSources",
            "baseName": "ipccCharacterizationFactorsSources",
            "type": "Array<string>"
        },
        {
            "name": "crossSectoralStandardsUsed",
            "baseName": "crossSectoralStandardsUsed",
            "type": "Array<string>"
        },
        {
            "name": "productOrSectorSpecificRules",
            "baseName": "productOrSectorSpecificRules",
            "type": "Array<ProductOrSectorSpecificRuleInner>"
        },
        {
            "name": "biogenicAccountingMethodology",
            "baseName": "biogenicAccountingMethodology",
            "type": "string"
        },
        {
            "name": "boundaryProcessesDescription",
            "baseName": "boundaryProcessesDescription",
            "type": "string"
        },
        {
            "name": "referencePeriodStart",
            "baseName": "referencePeriodStart",
            "type": "Date"
        },
        {
            "name": "referencePeriodEnd",
            "baseName": "referencePeriodEnd",
            "type": "Date"
        },
        {
            "name": "geographyCountrySubdivision",
            "baseName": "geographyCountrySubdivision",
            "type": "string"
        },
        {
            "name": "geographyCountry",
            "baseName": "geographyCountry",
            "type": "string"
        },
        {
            "name": "geographyRegionOrSubregion",
            "baseName": "geographyRegionOrSubregion",
            "type": "string"
        },
        {
            "name": "secondaryEmissionFactorSources",
            "baseName": "secondaryEmissionFactorSources",
            "type": "Array<SecondaryEmissionFactorSourcesInner>"
        },
        {
            "name": "exemptedEmissionsPercent",
            "baseName": "exemptedEmissionsPercent",
            "type": "number"
        },
        {
            "name": "exemptedEmissionsDescription",
            "baseName": "exemptedEmissionsDescription",
            "type": "string"
        },
        {
            "name": "packagingEmissionsIncluded",
            "baseName": "packagingEmissionsIncluded",
            "type": "boolean"
        },
        {
            "name": "packagingGhgEmissions",
            "baseName": "packagingGhgEmissions",
            "type": "string"
        },
        {
            "name": "allocationRulesDescription",
            "baseName": "allocationRulesDescription",
            "type": "string"
        },
        {
            "name": "uncertaintyAssessmentDescription",
            "baseName": "uncertaintyAssessmentDescription",
            "type": "string"
        },
        {
            "name": "primaryDataShare",
            "baseName": "primaryDataShare",
            "type": "number"
        },
        {
            "name": "dqi",
            "baseName": "dqi",
            "type": "PactDataQualityIndicators"
        }    ];

    static getAttributeTypeMap() {
        return PactProductCarbonFootprint.attributeTypeMap;
    }
}

