openapi: 3.0.1
info:
  title: Variable API
  description: This is the Variable API
  version: 1.0.0

servers:
  - url: https://app.variable.global/api

paths:
  /auth/token:
    post:
      summary: Get a token
      security:
        - basicAuth: [ ]
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - grant_type
              default: client_credentials
              properties:
                grant_type:
                  type: string
                  description: The grant type
                  example: client_credentials
      responses:
        '200':
          description: A token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Authorization'
  /v1/activity:
    get:
      summary: Get high level activity data
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/variable-company'
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
      responses:
        '200':
          description: A list of activities
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
  /v1/activity/data:
    get:
      summary: Get high level activity data with a list of activities
      security:
        - bearerAuth: [ ]
      parameters:
        - $ref: '#/components/parameters/variable-company'
        - $ref: '#/components/parameters/date'
        - $ref: '#/components/parameters/startDate'
        - $ref: '#/components/parameters/endDate'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/page'
      responses:
        '200':
          description: A list of activities
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ActivityResponse'
                  - type: object
                    properties:
                      page:
                        type: integer
                        example: 1
                      pageSize:
                        type: integer
                        example: 100
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Activity'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oAuthNoScopes:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /auth/token
          scopes: { }
  parameters:
    variable-company:
      name: Variable-Company
      in: header
      description: The company UUID
      required: true
      schema:
        type: string
        example: aa17223a-471c-4eb7-9ff5-7800fd023960
    date:
      name: date
      in: query
      description: 'Date to query (e.g. 2021-01-01, 2021-12, 2021)'
      required: true
      schema:
        type: string
        example: 2021-01
    startDate:
      name: sd
      in: query
      description: Start date
      required: true
      schema:
        type: string
        example: '2021-01-01'
    endDate:
      name: ed
      in: query
      description: End date
      required: true
      schema:
        type: string
        example: '2021-01-31'
    limit:
      name: limit
      in: query
      description: Limit the number of results
      required: false
      schema:
        type: integer
        example: 100
    page:
      name: page
      in: query
      description: The page number
      required: false
      schema:
        type: integer
        example: 1
  schemas:
    Authorization:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        scope:
          type: string
    ActivityResponse:
      type: object
      properties:
        count:
          type: integer
          example: 1500
        queryString:
          type: string
          description: The query string used to filter the activities
          example: date=2021-01
        startDate:
          type: string
          description: ISO 8601 date
          example: 2021-01-01T00:00:00Z
        endDate:
          type: string
          description: ISO 8601 date
          example: 2021-01-31T23:59:59Z
        CO2e:
          type: string
          description: The total CO2e of all activities categorized to a GHG Scope
          example: '1234.5678'
        uncategorizedCO2e:
          type: string
          description: The total CO2e of all activities *not* categorized to a GHG Scope
          example: '1.2345678'
        CO2eUnit:
          type: string
          description: The unit of CO2e
          example: kg
    Activity:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
        description:
          type: string
        quantity:
          type: number
          example: 150
        CO2e:
          type: string
          example: '1234.5678'
        UpstreamCO2e:
          type: string
          example: '1234.5678'
        DownstreamCO2e:
          type: string
          example: '1234.5678'
        startDate:
          type: string
          description: ISO 8601 date
          example: 2021-01-01T00:00:00Z
        endDate:
          type: string
          description: ISO 8601 date
          example: 2021-01-31T23:59:59Z
        product:
          $ref: '#/components/schemas/Product'
        scope:
          $ref: '#/components/schemas/Scope'
        taxonomy:
          $ref: '#/components/schemas/Taxonomy'
        org:
          $ref: '#/components/schemas/Org'
    Product:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
        name:
          type: string
          example: 'Product Name'
    Scope:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
        name:
          type: string
          example: 'Scope 2: Electricity'
    Taxonomy:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
        name:
          type: string
          example: 'Energy'
    Org:
      type: object
      properties:
        uuid:
          type: string
          format: UUID
        name:
          type: string
          example: 'Org Unit'

security:
  - basicAuth: [ ]
  - bearerAuth: [ ]
  - oAuthNoScopes: [ ]